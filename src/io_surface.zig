// THIS FILE IS AUTOGENERATED. MODIFICATIONS WILL NOT BE MAINTAINED.

const std = @import("std");
const objc = @import("objc.zig"); // Objective-C Runtime in zig.
const core_foundation = @import("core_foundation.zig"); // Framework dependency CoreFoundation.

pub const ID = objc.uint32_t;

pub const LockOptions = enum(objc.uint32_t) {
    kIOSurfaceLockReadOnly = 1,
    kIOSurfaceLockAvoidSync = 2,
};

pub const PurgeabilityState = enum(objc.uint32_t) {
    kIOSurfacePurgeableNonVolatile = 0,
    kIOSurfacePurgeableVolatile = 1,
    kIOSurfacePurgeableEmpty = 2,
    kIOSurfacePurgeableKeepCurrent = 3,
};

pub const anon431 = enum(u32) {
    kIOSurfaceDefaultCache = 0,
    kIOSurfaceInhibitCache = 1,
    kIOSurfaceWriteThruCache = 2,
    kIOSurfaceCopybackCache = 3,
    kIOSurfaceWriteCombineCache = 4,
    kIOSurfaceCopybackInnerCache = 5,
};

pub const anon531 = enum(u32) {
    kIOSurfaceMapCacheShift = 8,
    kIOSurfaceMapDefaultCache = 0,
    kIOSurfaceMapInhibitCache = 256,
    kIOSurfaceMapWriteThruCache = 512,
    kIOSurfaceMapCopybackCache = 768,
    kIOSurfaceMapWriteCombineCache = 1024,
    kIOSurfaceMapCopybackInnerCache = 1280,
};

pub const __IOSurface = extern struct {};

pub const Ref = ?*__IOSurface;

pub const ComponentName = enum(objc.int32_t) {
    kIOSurfaceComponentNameUnknown = 0,
    kIOSurfaceComponentNameAlpha = 1,
    kIOSurfaceComponentNameRed = 2,
    kIOSurfaceComponentNameGreen = 3,
    kIOSurfaceComponentNameBlue = 4,
    kIOSurfaceComponentNameLuma = 5,
    kIOSurfaceComponentNameChromaRed = 6,
    kIOSurfaceComponentNameChromaBlue = 7,
};

pub const ComponentType = enum(objc.int32_t) {
    kIOSurfaceComponentTypeUnknown = 0,
    kIOSurfaceComponentTypeUnsignedInteger = 1,
    kIOSurfaceComponentTypeSignedInteger = 2,
    kIOSurfaceComponentTypeFloat = 3,
    kIOSurfaceComponentTypeSignedNormalized = 4,
};

pub const ComponentRange = enum(objc.int32_t) {
    kIOSurfaceComponentRangeUnknown = 0,
    kIOSurfaceComponentRangeFullRange = 1,
    kIOSurfaceComponentRangeVideoRange = 2,
    kIOSurfaceComponentRangeWideRange = 3,
};

pub const Subsampling = enum(objc.int32_t) {
    kIOSurfaceSubsamplingUnknown = 0,
    kIOSurfaceSubsamplingNone = 1,
    kIOSurfaceSubsampling422 = 2,
    kIOSurfaceSubsampling420 = 3,
    kIOSurfaceSubsampling411 = 4,
};

pub extern "IOSurface" fn GetTypeID() callconv(.C) core_foundation.TypeID;

pub extern "IOSurface" fn Create(properties: core_foundation.DictionaryRef) callconv(.C) Ref;

pub extern "IOSurface" fn Lookup(csid: ID) callconv(.C) Ref;

pub extern "IOSurface" fn GetID(buffer: Ref) callconv(.C) ID;

pub extern "IOSurface" fn Lock(buffer: Ref, options: LockOptions, seed: ?*objc.uint32_t) callconv(.C) objc.kern_return_t;

pub extern "IOSurface" fn Unlock(buffer: Ref, options: LockOptions, seed: ?*objc.uint32_t) callconv(.C) objc.kern_return_t;

pub extern "IOSurface" fn GetAllocSize(buffer: Ref) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetWidth(buffer: Ref) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetHeight(buffer: Ref) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetBytesPerElement(buffer: Ref) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetBytesPerRow(buffer: Ref) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetBaseAddress(buffer: Ref) callconv(.C) ?*anyopaque;

pub extern "IOSurface" fn GetElementWidth(buffer: Ref) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetElementHeight(buffer: Ref) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetPixelFormat(buffer: Ref) callconv(.C) objc.OSType;

pub extern "IOSurface" fn GetSeed(buffer: Ref) callconv(.C) objc.uint32_t;

pub extern "IOSurface" fn GetPlaneCount(buffer: Ref) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetWidthOfPlane(buffer: Ref, planeIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetHeightOfPlane(buffer: Ref, planeIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetBytesPerElementOfPlane(buffer: Ref, planeIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetBytesPerRowOfPlane(buffer: Ref, planeIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetBaseAddressOfPlane(buffer: Ref, planeIndex: objc.size_t) callconv(.C) ?*anyopaque;

pub extern "IOSurface" fn GetElementWidthOfPlane(buffer: Ref, planeIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetElementHeightOfPlane(buffer: Ref, planeIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetNumberOfComponentsOfPlane(buffer: Ref, planeIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetNameOfComponentOfPlane(buffer: Ref, planeIndex: objc.size_t, componentIndex: objc.size_t) callconv(.C) ComponentName;

pub extern "IOSurface" fn GetTypeOfComponentOfPlane(buffer: Ref, planeIndex: objc.size_t, componentIndex: objc.size_t) callconv(.C) ComponentType;

pub extern "IOSurface" fn GetRangeOfComponentOfPlane(buffer: Ref, planeIndex: objc.size_t, componentIndex: objc.size_t) callconv(.C) ComponentRange;

pub extern "IOSurface" fn GetBitDepthOfComponentOfPlane(buffer: Ref, planeIndex: objc.size_t, componentIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetBitOffsetOfComponentOfPlane(buffer: Ref, planeIndex: objc.size_t, componentIndex: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetSubsampling(buffer: Ref) callconv(.C) Subsampling;

pub extern "IOSurface" fn SetValue(buffer: Ref, key: core_foundation.StringRef, value: core_foundation.TypeRef) callconv(.C) void;

pub extern "IOSurface" fn CopyValue(buffer: Ref, key: core_foundation.StringRef) callconv(.C) core_foundation.TypeRef;

pub extern "IOSurface" fn RemoveValue(buffer: Ref, key: core_foundation.StringRef) callconv(.C) void;

pub extern "IOSurface" fn SetValues(buffer: Ref, keysAndValues: core_foundation.DictionaryRef) callconv(.C) void;

pub extern "IOSurface" fn CopyAllValues(buffer: Ref) callconv(.C) core_foundation.DictionaryRef;

pub extern "IOSurface" fn RemoveAllValues(buffer: Ref) callconv(.C) void;

pub extern "IOSurface" fn CreateMachPort(buffer: Ref) callconv(.C) objc.mach_port_t;

pub extern "IOSurface" fn LookupFromMachPort(port: objc.mach_port_t) callconv(.C) Ref;

pub extern "IOSurface" fn GetPropertyMaximum(property: core_foundation.StringRef) callconv(.C) objc.size_t;

pub extern "IOSurface" fn GetPropertyAlignment(property: core_foundation.StringRef) callconv(.C) objc.size_t;

pub extern "IOSurface" fn AlignProperty(property: core_foundation.StringRef, value: objc.size_t) callconv(.C) objc.size_t;

pub extern "IOSurface" fn IncrementUseCount(buffer: Ref) callconv(.C) void;

pub extern "IOSurface" fn DecrementUseCount(buffer: Ref) callconv(.C) void;

pub extern "IOSurface" fn GetUseCount(buffer: Ref) callconv(.C) objc.int32_t;

pub extern "IOSurface" fn IsInUse(buffer: Ref) callconv(.C) objc.Boolean;

pub extern "IOSurface" fn AllowsPixelSizeCasting(buffer: Ref) callconv(.C) objc.Boolean;

pub extern "IOSurface" fn SetPurgeable(buffer: Ref, newState: objc.uint32_t, oldState: ?*objc.uint32_t) callconv(.C) objc.kern_return_t;

pub const MemoryLedgerTags = enum(i32) {
    kIOSurfaceMemoryLedgerTagDefault = 1,
    kIOSurfaceMemoryLedgerTagNetwork = 2,
    kIOSurfaceMemoryLedgerTagMedia = 3,
    kIOSurfaceMemoryLedgerTagGraphics = 4,
    kIOSurfaceMemoryLedgerTagNeural = 5,
};

pub const MemoryLedgerFlags = enum(objc.uint32_t) {
    kIOSurfaceMemoryLedgerFlagNoFootprint = 1,
};

pub extern "IOSurface" fn SetOwnershipIdentity(buffer: Ref, task_id_token: objc.task_id_token_t, newLedgerTag: i32, newLedgerOptions: objc.uint32_t, ) callconv(.C) objc.kern_return_t;

pub extern "IOSurface" fn CreateXPCObject(aSurface: Ref) callconv(.C) objc.xpc_object_t;

pub extern "IOSurface" fn LookupFromXPCObject(xobj: objc.xpc_object_t) callconv(.C) Ref;

