// THIS FILE IS AUTOGENERATED. MODIFICATIONS WILL NOT BE MAINTAINED.

const std = @import("std");
const objc = @import("objc.zig"); // Objective-C Runtime in zig.
const core_foundation = @import("core_foundation.zig"); // Framework dependency CoreFoundation.
const core_media = @import("core_media.zig"); // Framework dependency CoreMedia.
const core_audio_types = @import("core_audio_types.zig"); // Framework dependency CoreAudioTypes.

pub const opaqueMTAudioProcessingTap = extern struct {};

pub const AudioProcessingTapRef = opaqueMTAudioProcessingTap;

extern "MediaToolbox" fn MTAudioProcessingTapGetTypeID() callconv(.C) core_foundation.TypeID;
pub const audioProcessingTapGetTypeID = MTAudioProcessingTapGetTypeID;

pub const AudioProcessingTapCreationFlags = objc.uint32_t;

pub const anon421 = AudioProcessingTapCreationFlags;
pub const anon421_MTAudioProcessingTapCreationFlag_PreEffects: AudioProcessingTapCreationFlags = 1;
pub const anon421_MTAudioProcessingTapCreationFlag_PostEffects: AudioProcessingTapCreationFlags = 2;

pub const AudioProcessingTapFlags = objc.uint32_t;

pub const AudioProcessingTapInitCallback = ?*const fn (AudioProcessingTapRef, ?*anyopaque, ?*?*anyopaque) callconv(.C) void;

pub const AudioProcessingTapFinalizeCallback = ?*const fn (AudioProcessingTapRef) callconv(.C) void;

pub const AudioProcessingTapPrepareCallback = ?*const fn (AudioProcessingTapRef, core_media.ItemCount, ?*const core_audio_types.StreamBasicDescription) callconv(.C) void;

pub const AudioProcessingTapUnprepareCallback = ?*const fn (AudioProcessingTapRef) callconv(.C) void;

pub const AudioProcessingTapProcessCallback = ?*const fn (
    AudioProcessingTapRef,
    core_media.ItemCount,
    AudioProcessingTapFlags,
    ?*core_audio_types.BufferList,
    ?*core_media.ItemCount,
    ?*AudioProcessingTapFlags,
) callconv(.C) void;

pub const AudioProcessingTapCallbacks = extern struct {
    version: i32,
    clientInfo: ?*anyopaque,
    init: AudioProcessingTapInitCallback,
    finalize: AudioProcessingTapFinalizeCallback,
    prepare: AudioProcessingTapPrepareCallback,
    unprepare: AudioProcessingTapUnprepareCallback,
    process: AudioProcessingTapProcessCallback,
};

extern "MediaToolbox" fn MTAudioProcessingTapCreate(
    allocator: core_foundation.AllocatorRef,
    callbacks: ?*const AudioProcessingTapCallbacks,
    flags: AudioProcessingTapCreationFlags,
    tapOut: ?*AudioProcessingTapRef,
) callconv(.C) objc.OSStatus;
pub const audioProcessingTapCreate = MTAudioProcessingTapCreate;

extern "MediaToolbox" fn MTAudioProcessingTapGetStorage(tap: AudioProcessingTapRef) callconv(.C) ?*anyopaque;
pub const audioProcessingTapGetStorage = MTAudioProcessingTapGetStorage;

extern "MediaToolbox" fn MTAudioProcessingTapGetSourceAudio(
    tap: AudioProcessingTapRef,
    numberFrames: core_media.ItemCount,
    bufferListInOut: ?*core_audio_types.BufferList,
    flagsOut: ?*AudioProcessingTapFlags,
    timeRangeOut: ?*core_media.TimeRange,
    numberFramesOut: ?*core_media.ItemCount,
) callconv(.C) objc.OSStatus;
pub const audioProcessingTapGetSourceAudio = MTAudioProcessingTapGetSourceAudio;

extern "MediaToolbox" fn MTRegisterProfessionalVideoWorkflowFormatReaders() callconv(.C) void;
pub const registerProfessionalVideoWorkflowFormatReaders = MTRegisterProfessionalVideoWorkflowFormatReaders;

extern "MediaToolbox" fn MTCopyLocalizedNameForMediaType(mediaType: core_media.MediaType) callconv(.C) core_foundation.StringRef;
pub const copyLocalizedNameForMediaType = MTCopyLocalizedNameForMediaType;

extern "MediaToolbox" fn MTCopyLocalizedNameForMediaSubType(mediaType: core_media.MediaType, mediaSubType: objc.FourCharCode) callconv(.C) core_foundation.StringRef;
pub const copyLocalizedNameForMediaSubType = MTCopyLocalizedNameForMediaSubType;
